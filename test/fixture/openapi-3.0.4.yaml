---
openapi: 3.0.4
info:
  version: 1.0.0
  title: OpenAPI 3.0.4 Test API
  description: Test API spec for OpenAPI 3.0.4 compatibility testing
  license:
    name: MIT
    url: https://spdx.org/licenses/MIT
  contact:
    name: Test Contact
    email: test@example.com
servers:
- url: https://api.example.com/v1
  description: Production server
- url: https://staging-api.example.com/v1
  description: Staging server
paths:
  /users:
    get:
      summary: List users
      description: Retrieve a list of users
      operationId: listUsers
      tags:
      - users
      parameters:
      - name: limit
        in: query
        description: Maximum number of users to return
        required: false
        schema:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          default: 20
      - name: offset
        in: query
        description: Number of users to skip
        required: false
        schema:
          type: integer
          format: int32
          minimum: 0
          default: 0
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  total:
                    type: integer
                    description: Total number of users
                  limit:
                    type: integer
                    description: Requested limit
                  offset:
                    type: integer
                    description: Requested offset
                required:
                - users
                - total
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create user
      description: Create a new user
      operationId: createUser
      tags:
      - users
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{userId}:
    get:
      summary: Get user by ID
      description: Retrieve a specific user by their ID
      operationId: getUserById
      tags:
      - users
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update user
      description: Update an existing user
      operationId: updateUser
      tags:
      - users
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        description: Updated user data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete user
      description: Delete a user by their ID
      operationId: deleteUser
      tags:
      - users
      parameters:
      - name: userId
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
          format: uuid
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        email:
          type: string
          format: email
          description: User's email address
        name:
          type: string
          description: User's full name
          minLength: 1
          maxLength: 100
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 150
          description: User's age
        created_at:
          type: string
          format: date-time
          description: When the user was created
        updated_at:
          type: string
          format: date-time
          description: When the user was last updated
        profile:
          $ref: '#/components/schemas/UserProfile'
      required:
      - id
      - email
      - name
      - created_at
    UserProfile:
      type: object
      properties:
        bio:
          type: string
          description: User's biography
          maxLength: 500
        website:
          type: string
          format: uri
          description: User's website URL
        location:
          type: string
          description: User's location
          maxLength: 100
        avatar_url:
          type: string
          format: uri
          description: URL to user's avatar image
    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        name:
          type: string
          description: User's full name
          minLength: 1
          maxLength: 100
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 150
          description: User's age
        profile:
          $ref: '#/components/schemas/UserProfile'
      required:
      - email
      - name
    UpdateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          description: User's email address
        name:
          type: string
          description: User's full name
          minLength: 1
          maxLength: 100
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 150
          description: User's age
        profile:
          $ref: '#/components/schemas/UserProfile'
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details
          additionalProperties: true
      required:
      - code
      - message
tags:
- name: users
  description: User management operations